{"version":3,"sources":["components/Header.jsx","components/NotFound.jsx","utils/common.js","components/EditStudentPopup.jsx","actions/studentActions.js","components/StudentChart.jsx","components/Students.jsx","components/StudentsOfClassPopUp.jsx","components/Teachers.jsx","store/reducers/StudentReducer.js","store/reducers/RelationshipsReducer.js","store/reducers/ClassesReducer.js","store/reducers/DegreesReducer.js","store/reducers/TeacherReducer.js","store/reducers/MatterReducer.js","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js","images/in_development.png"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","title","alt","src","Component","NotFound","Header_Header","getClassById","classes","class_id","find","_class","id","getDegreeById","degrees","degree_id","degree","EditStudentPopUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","studentToEdit","window","editStudentPopUp","assertThisInitialized","$","hide","degreeId","relations","allClasses","allRelationsDegrees","map","allRelations","classesForThisDegree","concat","apply","filter","el","a_class","b_class","hasOwnProperty","classPosition","classId","common","evt","what","setState","objectSpread","name","target","value","parseInt","studentId","preventDefault","dispatch","type","closePopUp","_this2","updateStateFromProps","onClick","onChange","updateForm","lib","toString","disabled","key","getClassesOfADegree","class_","applyChange","connect","classesReducer","degreesReducer","relationsReducer","relationships","StudentChart","studentChart","students","compressed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","student","err","return","ret","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","isNaN","numberOfColors","colors","index","r","Math","floor","random","g","b","background","border","getRandomColors","length","labels","datasets","label","data","countStudentsInDegree","backgroundColor","borderColor","borderWidth","react_chartjs_2_es","buildDataInFormatOfChartJS","options","maintainAspectRatio","studentReducer","Students","userName","val","toLowerCase","userDegree","userClass","table_tbody","show","each","_","tr","text","includes","allDegrees","onSubmit","applyFilter","placeholder","style","margin","createMoreStudents","showChart","editOneStudent","fontSize","EditStudentPopup","components_StudentChart","matters","matterReducer","StudentsOfClassPopUp","width","inDevelopmentImage","Teachers","userMatter","teachers","teacher","teacher_id","degrees_found","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","relation","teacherId","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getDegreeResult","listOfClasses","degrees_relation","degree_relation","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","showStudents","components_StudentsOfClassPopUp","teacherReducer","INITIAL_STATE","StudentReducer","arguments","action","console","log","newState","JSON","parse","stringify","last_id","max","randomDegree","allDegreesWithId","randomDegreeWithId","randomClassPosition","the_class","ra","error","warn","student_index","_student_id","new_name","new_classId","new_degreeId","studentToChange","MatterReducer","rootReducer","combineReducers","store","createStore","App","rootStore","test","process","basename","es","react_router","path","exact","render","component","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"oNAEqBA,mLAGb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAEdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,OAAOG,MAAM,eAAcN,EAAAC,EAAAC,cAAA,OAAKK,IAAI,cAAcC,IAAI,sEAE7ER,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACZH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,cAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIC,MAAM,QAAnB,SAEJN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYC,MAAM,IAA3B,eACJN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAYC,MAAM,IAA3B,2BApBIG,aCAfC,mLAGb,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,kDAPkBO,iECF/B,SAASG,EAAaC,EAASC,GAClC,OAAOD,EAAQE,KAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAOH,IAGzC,SAASI,EAAcC,EAASC,GACnC,OAAOD,EAAQJ,KAAK,SAAAM,GAAM,OAAIA,EAAOJ,KAAOG,QCG1CE,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,cAAeR,EAAKD,MAAMS,eAG9BC,OAAOC,iBAAPT,OAAAU,EAAA,EAAAV,CAAAD,GAPeA,4EAWfY,IAAE,gBAAgBC,KAAK,iDAGPC,GAKhB,ODjBD,SAA8BzB,EAAS0B,EAAWD,GAErD,IAAME,EAAa3B,EAGf4B,EAFiBF,EAEkBG,IAAI,SAAAC,GAAY,OAAIA,EAAaxB,UAKpEyB,GAJJH,EAAsB,GAAGI,OAAOC,MAAM,GAAIL,IAEGM,OAAO,SAAAC,GAAE,OAAIA,EAAGV,WAAaA,IAE9BI,IAAI,SAAAM,GAAE,OAAIA,EAAGnC,UAkBzD,OAjBA+B,EAAuB,GAAGC,OAAOC,MAAM,GAAIF,GAErBJ,EAAWO,OAAO,SAAAE,GACpC,OAAQL,EAAqB7B,KAAK,SAAAmC,GAQ9B,OANIA,EAAQC,eAAe,iBACvBD,EAAQjC,GAAKiC,EAAQE,cAErBF,EAAQjC,GAAKiC,EAAQG,QAGlBH,EAAQjC,KAAOgC,EAAQhC,OCL3BqC,CAHY3B,KAAKJ,MAAMV,QACTc,KAAKJ,MAAMgB,UAE4BD,sCAGrDiB,EAAKC,GAEC,SAATA,EACA7B,KAAK8B,SAALhC,OAAAiC,EAAA,EAAAjC,CAAA,GACOE,KAAKI,MADZ,CAEIC,cAAcP,OAAAiC,EAAA,EAAAjC,CAAA,GAAME,KAAKI,MAAMC,cAAlB,CAAiC2B,KAAMJ,EAAIK,OAAOC,WAIrD,WAATL,EACL7B,KAAK8B,SAALhC,OAAAiC,EAAA,EAAAjC,CAAA,GACOE,KAAKI,MADZ,CAEIC,cAAcP,OAAAiC,EAAA,EAAAjC,CAAA,GAAME,KAAKI,MAAMC,cAAlB,CAAiCM,SAAUwB,SAASP,EAAIK,OAAOC,MAAO,QAIzE,UAATL,GACL7B,KAAK8B,SAALhC,OAAAiC,EAAA,EAAAjC,CAAA,GACOE,KAAKI,MADZ,CAEIC,cAAcP,OAAAiC,EAAA,EAAAjC,CAAA,GAAME,KAAKI,MAAMC,cAAlB,CAAiCqB,QAASS,SAASP,EAAIK,OAAOC,MAAO,yDAWrFlC,KAAKI,MAAMC,eACXL,KAAKI,MAAMC,eAAiBL,KAAKI,MAAMC,cAAcf,KAAOU,KAAKJ,MAAMS,cAAcf,MAElFU,KAAKI,MAALN,OAAAiC,EAAA,EAAAjC,CAAA,GACOE,KAAKI,MADZ,CAEIC,cAAeL,KAAKJ,MAAMS,qDAK9BuB,GC7DT,IAAwBQ,EAAWJ,EAAMN,EAAUf,ED8DlDiB,EAAIS,iBAEJrC,KAAKJ,MAAM0C,UChEYF,EDiEnBpC,KAAKI,MAAMC,cAAcf,GCjEK0C,EDkE9BhC,KAAKI,MAAMC,cAAc2B,KClEWN,EDmEpC1B,KAAKI,MAAMC,cAAcqB,QCnEqBf,EDoE9CX,KAAKI,MAAMC,cAAcM,SClE1B,CACH4B,KAAM,mBACNH,YACAJ,OACAN,UACAf,cDgEAX,KAAKwC,8CAKA,IAAAC,EAAAzC,KACL,OAAIA,KAAKJ,MAAMS,eACXL,KAAK0C,uBAEDrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBc,GAAG,eACjCjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAChBH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoE,QAAS,kBAAMF,EAAKD,cAAchE,UAAU,oBAAjD,KACAH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOL,MAAOlC,KAAKI,MAAMC,cAAc2B,KAAMY,SAAU,SAAChB,GAAD,OAASa,EAAKI,WAAWjB,EAAK,WAEjGvD,EAAAC,EAAAC,cAACuE,EAAA,OAAD,CAAQZ,MAAOlC,KAAKI,MAAMC,cAAcM,SAASoC,WAAYH,SAAU,SAAChB,GAAD,OAASa,EAAKI,WAAWjB,EAAK,YACjGvD,EAAAC,EAAAC,cAAA,UAAQ2D,MAAM,GAAGc,UAAQ,GAAzB,qBACChD,KAAKJ,MAAMJ,QAAQuB,IAAI,SAAArB,GACpB,OACIrB,EAAAC,EAAAC,cAAA,UAAQ2D,MAAOxC,EAAOJ,GAAI2D,IAAKvD,EAAOJ,IAAtC,IAA6CI,EAAOsC,KAApD,QAMZ3D,EAAAC,EAAAC,cAACuE,EAAA,OAAD,CAAQZ,MAAOlC,KAAKI,MAAMC,cAAcqB,QAAQqB,WAAYH,SAAU,SAAChB,GAAD,OAASa,EAAKI,WAAWjB,EAAK,WAChGvD,EAAAC,EAAAC,cAAA,UAAQ2D,MAAM,GAAGc,UAAQ,GAAzB,wBACChD,KAAKkD,oBAAoBlD,KAAKI,MAAMC,cAAcM,UAAUI,IAAI,SAAAoC,GAC7D,OACI9E,EAAAC,EAAAC,cAAA,UAAQ2D,MAAOiB,EAAO7D,GAAI2D,IAAKE,EAAO7D,IAAtC,IAA6C6D,EAAOnB,KAApD,QAKZ3D,EAAAC,EAAAC,cAACuE,EAAA,OAAD,CAAQH,QAAS,SAACf,GAAD,OAASa,EAAKW,YAAYxB,KAA3C,gBAQbvD,EAAAC,EAAAC,cAAA,mBAtHYO,aAqIhBuE,kBARf,SAAyBjD,GACrB,MAAO,CACHlB,QAASkB,EAAMkD,eAAepE,QAAQA,QACtCM,QAASY,EAAMmD,eAAe/D,QAC9BoB,UAAWR,EAAMoD,iBAAiBC,gBAI3BJ,CAAyB1D,WEvIlC+D,cAEF,SAAAA,EAAY9D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,GACd7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,KAAMJ,IAENU,OAAOqD,aAAP7D,OAAAU,EAAA,EAAAV,CAAAD,GAHcA,4EAOdY,IAAE,iBAAiBC,KAAK,mDAGNkD,GAIlB,IAAIC,EAAa,GAJWC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAM5B,QAAAC,EAAAC,EAAsBP,EAAtBQ,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAgC,KAArBU,EAAqBN,EAAAhC,MACxB2B,EAAWrC,eAAegD,EAAQ7D,UAClCkD,EAAWW,EAAQ7D,UAAYkD,EAAWW,EAAQ7D,UAAU,EAG5DkD,EAAWW,EAAQ7D,UAAY,GAXX,MAAA8D,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAgB5B,IAAIW,EAAM,GAhBkBC,GAAA,EAAAC,GAAA,EAAAC,OAAAb,EAAA,IAkB5B,QAAAc,EAAAC,EAAuBhF,KAAKJ,MAAMJ,QAAQuB,IAAI,SAAAM,GAAE,OAAIA,EAAG/B,KAAvD8E,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAA4D,KAAjDjE,EAAiDoE,EAAA7C,MACxDyC,EAAIM,KAAKC,MAAMrB,EAAWlD,IAAa,EAAIkD,EAAWlD,KAnB9B,MAAA8D,GAAAI,GAAA,EAAAC,EAAAL,EAAA,YAAAG,GAAA,MAAAI,EAAAN,QAAAM,EAAAN,SAAA,WAAAG,EAAA,MAAAC,GAsB5B,OAAOH,0CAKKQ,GAEZ,IADA,IAAMC,EAAS,GACNC,EAAQ,EAAGA,EAAQF,EAAgBE,IAAS,CAEjD,IAAIC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgB1C,WACpC2C,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgB1C,WACpC4C,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgB1C,WAGxCqC,EAAOH,KAAK,CAACW,WAAe,QAAQN,EAAE,KAAKI,EAAE,KAAKC,EAAE,SAAUE,OAAU,QAAQP,EAAE,KAAKI,EAAE,KAAKC,EAAE,SAGpG,OAAOP,uDAMP,IAAMA,EAASpF,KAAK8F,gBAAgB9F,KAAKJ,MAAMJ,QAAQuG,QACvD,MAAO,CACHC,OAAQhG,KAAKJ,MAAMJ,QAAQuB,IAAI,SAAAM,GAAE,OAAIA,EAAGW,OACxCiE,SAAU,CAAC,CACPC,MAAO,wBAEPC,KAAMnG,KAAKoG,sBAAsBpG,KAAKJ,MAAMgE,UAC5CyC,gBAAiBjB,EAAOrE,IAAI,SAAAM,GAAE,OAAEA,EAAGuE,aACnCU,YAAalB,EAAOrE,IAAI,SAAAM,GAAE,OAAEA,EAAGwE,SAC/BU,YAAa,sCAMhB,IAAA9D,EAAAzC,KAEL,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBc,GAAG,gBACjCjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAChBH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoE,QAAS,kBAAMF,EAAKD,cAAchE,UAAU,oBAAjD,KAGAH,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CACIL,KAAMnG,KAAKyG,6BAGXC,QAAS,CAAEC,qBAAqB,eAtFjC7H,aAwGZuE,kBAPf,SAAyBjD,GACrB,MAAO,CACHwD,SAAUxD,EAAMwG,eAAehD,SAC/BpE,QAASY,EAAMmD,eAAe/D,UAIvB6D,CAAyBK,GCpGxCpD,OAAOG,EAAIA,QAGLoG,cAEF,SAAAA,EAAYjH,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACdhH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+G,GAAA1G,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,cAAgBR,EAAKD,MAAMgE,SAAS,IAGxCtD,OAAOsD,SAAP9D,OAAAU,EAAA,EAAAV,CAAAD,GAPcA,4EAULV,GACT,OAAOwC,EAAoB3B,KAAKJ,MAAMV,QAASC,yCAGrCwB,GACV,OAAOgB,EAAqB3B,KAAKJ,MAAMJ,QAASmB,uCAGxCiB,GACRA,EAAIS,iBAEJ,IAAMyE,EAAWrG,IAAE,wBAAwBrB,KAAK,2BAA2B2H,MAAMC,cAC3EC,EAAaxG,IAAE,wBAAwBrB,KAAK,6BAA6B2H,MAAMC,cAC/EE,EAAYzG,IAAE,wBAAwBrB,KAAK,4BAA4B2H,MAAMC,cAE7EG,EAAc1G,IAAE,sBAAsBrB,KAAK,SAEjD+H,EAAY/H,KAAK,MAAMgI,OAGpBN,GACCK,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,kBAAkBoI,OAAOR,cAAcS,SAASX,GAC3DrG,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,SAMfuG,GACCE,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,oBAAoBoI,OAAOR,cAAcS,SAASR,GAC7DxG,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,SAMfwG,GACCC,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,mBAAmBoI,OAAOR,cAAcS,SAASP,GAC5DzG,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,sDF3EnB,IAA4BgH,EAAY1G,EAAcH,EEmFrDb,KAAKJ,MAAM0C,UFnFgBoF,EEmF4B1H,KAAKJ,MAAMJ,QFnF3BwB,EEmFoChB,KAAKJ,MAAMgB,UFnFjCC,EEmF4Cb,KAAKJ,MAAMV,QFjFzG,CACHqD,KAAM,uBACNmF,aACA1G,eACAH,uDEgFWR,GAEXI,IAAE,gBAAgB2G,KAAK,KAEvBpH,KAAK8B,SAAS,CACVzB,sDAOJI,IAAE,iBAAiB2G,KAAK,sCAGnB,IAAA3E,EAAAzC,KACC4D,EAAW5D,KAAKJ,MAAMgE,SAC5B,OACIvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,wBAEAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBmJ,SAAU,SAAC/F,GAAUa,EAAKmF,YAAYhG,KACpEvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,gBAAgBvI,GAAG,oBAAoBsD,SAAU,SAAChB,GAAD,OAASa,EAAKmF,YAAYhG,MAC1GvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,2BAAqBvI,GAAG,sBAAsBsD,SAAU,SAAChB,GAAD,OAASa,EAAKmF,YAAYhG,MACjHvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,kBAAkBvI,GAAG,qBAAqBsD,SAAU,SAAChB,GAAD,OAASa,EAAKmF,YAAYhG,OAGjHvD,EAAAC,EAAAC,cAAA,OAAKuJ,MAAO,CAACC,OAAQ,UAAWvJ,UAAU,iBAEtCH,EAAAC,EAAAC,cAACuE,EAAA,OAAD,CAAQH,QAAS,kBAAMF,EAAKuF,uBAA5B,2BACA3J,EAAAC,EAAAC,cAACuE,EAAA,OAAD,CAAQH,QAAS,kBAAMF,EAAKwF,cAA5B,yBAGJ5J,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYc,GAAG,gBAC5BjB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAIRF,EAAAC,EAAAC,cAAA,aACKqF,EAAS7C,IAAI,SAAAyD,GAAO,OACjBnG,EAAAC,EAAAC,cAAA,MAAI0E,IAAKuB,EAAQlF,IACbjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAegG,EAAQxC,MACrC3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBiE,EAAKlD,cAAciF,EAAQ7D,UAAUqB,MACpE3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBiE,EAAKxD,aAAauF,EAAQ9C,SAASM,MACjE3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmE,QAAS,kBAAMF,EAAKyF,eAAe1D,KAC3DnG,EAAAC,EAAAC,cAAA,KAAGuJ,MAAO,CAACK,SAAS,QAAS3J,UAAU,MAAvC,iBAWxBH,EAAAC,EAAAC,cAAC6J,EAAD,CAAkB/H,cAAeL,KAAKI,MAAMC,gBAE5ChC,EAAAC,EAAAC,cAAC8J,EAAD,cA1IOvJ,aA2JRuE,kBAXf,SAAyBjD,GACrB,MAAO,CACHwD,SAAUxD,EAAMwG,eAAehD,SAC/B1E,QAASkB,EAAMkD,eAAepE,QAAQA,QACtCM,QAASY,EAAMmD,eAAe/D,QAC9BoB,UAAWR,EAAMoD,iBAAiBC,cAClC6E,QAASlI,EAAMmI,cAAcD,UAKtBjF,CAAyBwD,oBClKlC2B,uLAGE/H,IAAE,sBAAsBC,KAAK,sCAGxB,IAAAb,EAAAG,KAEL,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBc,GAAG,qBAChCjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAChBH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKoE,QAAS,kBAAM9C,EAAK2C,cAAchE,UAAU,oBAAjD,KAEAH,EAAAC,EAAAC,cAAA,4BAEAF,EAAAC,EAAAC,cAAA,OAAKuJ,MAAO,CAACW,MAAM,OAAQ5J,IAAK6J,IAAoB9J,IAAI,eAjB7CE,aAgCpBuE,kBANf,SAAyBjD,GACrB,MAAO,IAKIiD,CAAyBmF,GC/BlCG,sLAEU/G,GACRA,EAAIS,iBAEJ,IAAMyE,EAAWrG,IAAE,wBAAwBrB,KAAK,2BAA2B2H,MAAMC,cAC3EC,EAAaxG,IAAE,wBAAwBrB,KAAK,6BAA6B2H,MAAMC,cAC/EE,EAAYzG,IAAE,wBAAwBrB,KAAK,4BAA4B2H,MAAMC,cAC7E4B,EAAanI,IAAE,wBAAwBrB,KAAK,6BAA6B2H,MAAMC,cAE/EG,EAAc1G,IAAE,sBAAsBrB,KAAK,SAEjD+H,EAAY/H,KAAK,MAAMgI,OAGpBN,GACCK,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,kBAAkBoI,OAAOR,cAAcS,SAASX,GAC3DrG,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,SAMfuG,GACCE,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,oBAAoBoI,OAAOR,cAAcS,SAASR,GAC7DxG,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,SAMfwG,GACCC,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,mBAAmBoI,OAAOR,cAAcS,SAASP,GAC5DzG,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,SAMfkI,GACCzB,EAAY/H,KAAK,cAAciI,KAAK,SAACC,EAAGC,GAChC9G,IAAE8G,GAAInI,KAAK,oBAAoBoI,OAAOR,cAAcS,SAASmB,GAC7DnI,IAAE8G,GAAIH,OAGN3G,IAAE8G,GAAI7G,gDAOlBD,IAAE,sBAAsB2G,KAAK,sCAGxB,IAAAvH,EAAAG,KACC6I,EAAW7I,KAAKJ,MAAMiJ,SACtBjI,EAAYZ,KAAKJ,MAAMgB,UACvBpB,EAAUQ,KAAKJ,MAAMJ,QACrBN,EAAUc,KAAKJ,MAAMV,QAE3B,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBmJ,SAAU,SAAC/F,GAAU/B,EAAK+H,YAAYhG,KACpEvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,oBAAoBvI,GAAG,oBAAoBsD,SAAU,SAAChB,GAAD,OAAS/B,EAAK+H,YAAYhG,MAC9GvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,qBAAkBvI,GAAG,sBAAsBsD,SAAU,SAAChB,GAAD,OAAS/B,EAAK+H,YAAYhG,MAC9GvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,+BAAyBvI,GAAG,sBAAsBsD,SAAU,SAAChB,GAAD,OAAS/B,EAAK+H,YAAYhG,MACrHvD,EAAAC,EAAAC,cAAA,SAAOgE,KAAK,OAAOsF,YAAY,sBAAsBvI,GAAG,qBAAqBsD,SAAU,SAAChB,GAAD,OAAS/B,EAAK+H,YAAYhG,OAGrHvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYc,GAAG,gBAC5BjB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAIRF,EAAAC,EAAAC,cAAA,aACKsK,EAAS9H,IAAI,SAAA+H,GAAO,ONvB1C,SAA8BlI,EAAWpB,EAASuJ,GAGrD,IAAMC,EAAgB,GAH0CC,GAAA,EAAAC,GAAA,EAAAC,OAAAlF,EAAA,IAKhE,QAAAmF,EAAAC,EAAuBzI,EAAvBwD,OAAAC,cAAA4E,GAAAG,EAAAC,EAAA/E,QAAAC,MAAA0E,GAAA,EAAkC,KAAvBK,EAAuBF,EAAAlH,MAC9B,GAAIoH,EAASC,YAAcR,EAAW,KAAAS,GAAA,EAAAC,GAAA,EAAAC,OAAAzF,EAAA,IAIlC,QAAA0F,EAAAC,EAA8BN,EAAS9J,QAAvC4E,OAAAC,cAAAmF,GAAAG,EAAAC,EAAAtF,QAAAC,MAAAiF,GAAA,EAAgD,KACtCK,EAAkBtK,EAAcC,EADMmK,EAAAzH,MACmBvB,UAC5DkJ,GACCb,EAAc/D,KAAK4E,IAPO,MAAApF,GAAAgF,GAAA,EAAAC,EAAAjF,EAAA,YAAA+E,GAAA,MAAAI,EAAAlF,QAAAkF,EAAAlF,SAAA,WAAA+E,EAAA,MAAAC,MANsB,MAAAjF,GAAAyE,GAAA,EAAAC,EAAA1E,EAAA,YAAAwE,GAAA,MAAAI,EAAA3E,QAAA2E,EAAA3E,SAAA,WAAAwE,EAAA,MAAAC,GAmBhE,OAAOH,EMKqBrH,CAA4Bf,EAAWpB,EAASsJ,EAAQxJ,IAAIyB,IAAI,SAAArB,GAC5D,ONxD7B,SAA+BR,EAAS0B,EAAWD,EAAUoI,GAEjE,IAAIe,EAAgB,GAChBC,EAAmB,GAHsDjG,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAK7E,QAAAC,EAAAC,EAAuBvD,EAAvBwD,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAAvBwF,EAAuBpF,EAAAhC,MAC7B,GAAIoH,EAASC,YAAcR,EAAW,CAElCgB,EAAmBA,EAAiB7I,OAAOoI,EAAS9J,SAFlB,IAAAoF,GAAA,EAAAC,GAAA,EAAAC,OAAAb,EAAA,IAIlC,QAAAc,EAAAC,EAA8BsE,EAAS9J,QAAvC4E,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,GAAA,EAAgD,KAArCoF,EAAqCjF,EAAA7C,MAC5C,GAAI8H,EAAgBrJ,WAAaA,EAAS,KAAAsJ,GAAA,EAAAC,GAAA,EAAAC,OAAAlG,EAAA,IACvC,QAAAmG,EAAAC,EAAqBL,EAAgB9K,QAArCkF,OAAAC,cAAA4F,GAAAG,EAAAC,EAAA/F,QAAAC,MAAA0F,GAAA,EAA8C,KAAnC9G,EAAmCiH,EAAAlI,MAGrCiB,EAAO3B,eAAe,iBACtB2B,EAAO7D,GAAK6D,EAAO1B,cAEnB0B,EAAO7D,GAAK6D,EAAOzB,QAGvBoI,EAAc7E,KAAKhG,EAAaC,EAASiE,EAAO7D,MAVd,MAAAmF,GAAAyF,GAAA,EAAAC,EAAA1F,EAAA,YAAAwF,GAAA,MAAAI,EAAA3F,QAAA2F,EAAA3F,SAAA,WAAAwF,EAAA,MAAAC,MALZ,MAAA1F,GAAAI,GAAA,EAAAC,EAAAL,EAAA,YAAAG,GAAA,MAAAI,EAAAN,QAAAM,EAAAN,SAAA,WAAAG,EAAA,MAAAC,MANkC,MAAAL,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GA4B5E,OAAO8F,EM4BgCnI,CAA4BzC,EAAS0B,EAAWlB,EAAOJ,GAAIwJ,EAAQxJ,IAAIyB,IAAI,SAAAoC,GAAM,OACpF9E,EAAAC,EAAAC,cAAA,MAAI0E,IAAK6F,EAAQxJ,GAAK,IAAMI,EAAOJ,GAAG,IAAI6D,EAAO7D,IAC7CjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAesK,EAAQ9G,MACrC3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiB,kCAAmCsK,EAAQxJ,IAC1EjB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBkB,EAAOsC,MACtC3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBmE,QAAS,kBAAM9C,EAAKyK,iBAAiBnH,EAAOnB,gBAW5G3D,EAAAC,EAAAC,cAACgM,EAAD,cAnHOzL,aAoIRuE,kBAVf,SAAyBjD,GACrB,MAAO,CACHwD,SAAUxD,EAAMwG,eAAehD,SAC/B1E,QAASkB,EAAMkD,eAAepE,QAAQA,QACtCM,QAASY,EAAMmD,eAAe/D,QAC9BoB,UAAWR,EAAMoD,iBAAiBC,cAClCoF,SAAUzI,EAAMoK,eAAe3B,WAIxBxF,CAAyBsF,WCzIlC8B,EAAgB,CAClB7G,gBAgHW8G,MAxGf,WAAuD,IAA/BtK,EAA+BuK,UAAA5E,OAAA,QAAA9B,IAAA0G,UAAA,GAAAA,UAAA,GAAvBF,EAAeG,EAAQD,UAAA5E,OAAA,EAAA4E,UAAA,QAAA1G,EAEnD,IAAK2G,EAGD,OAFAC,QAAQC,IAAI,aAEL1K,EAGX,GAAoB,yBAAhBwK,EAAOrI,KAAiC,CACxCsI,QAAQC,IAAI,wBAWZ,IATA,IAAMpD,EAAakD,EAAOlD,WACpB1G,EAAe4J,EAAO5J,aACtBH,EAAa+J,EAAO/J,WAGpBkK,EAAWC,KAAKC,MAAMD,KAAKE,UAAU9K,IAGrC+K,EAAU5F,KAAK6F,IAAIjK,MAAMoE,KAAMnF,EAAMwD,SAAS7C,IAAI,SAASyD,GAAW,OAAOA,EAAQlF,MAClF+F,EAAQ8F,EAAU,EAAG9F,EAAQ8F,EAAU,IAAK9F,IACjD,KAAI,WAGA,IAAMgG,EAAe3D,EAAWnC,KAAKC,MAAMD,KAAKE,SAAWiC,EAAW3B,SAGlEjF,EAAsBE,EAAaD,IAAI,SAAAC,GAAY,OAAIA,EAAaxB,UAGlE8L,GAFNxK,EAAsB,GAAGI,OAAOC,MAAM,GAAIL,IAEGM,OAAO,SAAAC,GAAE,OAAIA,EAAGV,WAAa0K,EAAa/L,KAEjFiM,EAAqBD,EAAiB/F,KAAKC,MAAMD,KAAKE,SAAW6F,EAAiBvF,SAElFyF,EAAsBD,EAAmBrM,QAAQqG,KAAKC,MAAMD,KAAKE,SAAW8F,EAAmBrM,QAAQ6G,SAEvG0F,EAAY5K,EAAWzB,KAAK,SAAAkC,GAE9B,OAAIkK,EAAoBhK,eAAe,iBAC5BF,EAAQhC,KAAOkM,EAAoB/J,cAEnCH,EAAQhC,KAAOkM,EAAoB9J,UAIlDqJ,EAASnH,SAASqB,KAAK,CACnB3F,GAAM+F,EACNqG,GAAMrG,EACNrD,KAAQ,iBAAmBqD,EAC3B1E,SAAY0K,EAAa/L,GACzBoC,QAAW+J,EAAUnM,KA7BzB,GAiCF,MAAOqM,GACLd,QAAQe,KAAK,0DAA4Db,EAASnH,SAASmC,QAC3FV,GAAS,EAKjB,OAAO0F,EAGX,GAAoB,qBAAhBH,EAAOrI,KAA6B,CACpCsI,QAAQC,IAAI,oBAGZ,IAOIe,EAPEd,EAAWC,KAAKC,MAAMD,KAAKE,UAAU9K,IAErC0L,EAAclB,EAAOxI,UACrB2J,EAAWnB,EAAO5I,KAClBgK,EAAcpB,EAAOlJ,QACrBuK,EAAerB,EAAOjK,SAGxBuL,EAAkBnB,EAASnH,SAASxE,KAAK,SAACoF,EAASa,GACnD,OAAIb,EAAQlF,KAAOwM,IACfD,EAAgBxG,GACT,KAkBf,OAVA6G,EAAepM,OAAAiC,EAAA,EAAAjC,CAAA,GACRoM,EADQ,CAEXlK,KAAM+J,EACNrK,QAASsK,EACTrL,SAAUsL,IAIdlB,EAASnH,SAASiI,GAAiBK,EAE5BnB,EAGX,OAAO3K,GC7GLqK,EAAgB,CAClBhH,qBAmBWD,MAXf,WAAyD,IAA/BpD,EAA+BuK,UAAA5E,OAAA,QAAA9B,IAAA0G,UAAA,GAAAA,UAAA,GAAvBF,EAE9B,OAFqDE,UAAA5E,OAAA,EAAA4E,UAAA,QAAA1G,GAQ9C7D,GALHyK,QAAQC,IAAI,aAEL1K,ICdTqK,EAAgB,CAClBvL,eAwBWoE,MAhBf,WAAuD,IAA/BlD,EAA+BuK,UAAA5E,OAAA,QAAA9B,IAAA0G,UAAA,GAAAA,UAAA,GAAvBF,EAAeG,EAAQD,UAAA5E,OAAA,EAAA4E,UAAA,QAAA1G,EAEnD,OAAK2G,GAMDA,EAAOrI,KAIJnC,IATHyK,QAAQC,IAAI,aAEL1K,ICdTqK,EAAgB,CAClBjL,eAuBW+D,MAff,WAAuD,IAA/BnD,EAA+BuK,UAAA5E,OAAA,QAAA9B,IAAA0G,UAAA,GAAAA,UAAA,GAAvBF,EAAeG,EAAQD,UAAA5E,OAAA,EAAA4E,UAAA,QAAA1G,EAEnD,OAAK2G,GAMDA,EAAOrI,KACAnC,IANPyK,QAAQC,IAAI,aAEL1K,ICdTqK,EAAgB,CAClB5B,gBAsBW6B,MAdf,WAAuD,IAA/BtK,EAA+BuK,UAAA5E,OAAA,QAAA9B,IAAA0G,UAAA,GAAAA,UAAA,GAAvBF,EAE5B,OAFmDE,UAAA5E,OAAA,EAAA4E,UAAA,QAAA1G,GAU5C7D,GAPHyK,QAAQC,IAAI,aAEL1K,ICdTqK,EAAgB,CAClBnC,eAkBW6D,MAVf,WAAsD,IAA/B/L,EAA+BuK,UAAA5E,OAAA,QAAA9B,IAAA0G,UAAA,GAAAA,UAAA,GAAvBF,EAC3B,OADkDE,UAAA5E,OAAA,EAAA4E,UAAA,QAAA1G,GAO3C7D,GALHyK,QAAQC,IAAI,aAEL1K,ICKAgM,EAXKC,YAAgB,CAChCzF,iBACApD,mBACAF,iBACAC,iBACAiH,iBACAjC,kBCVW+D,EAFDC,YAAYH,GC+BXI,MAvBf,WAGE,OAFAlM,OAAOmM,UAAYA,EACnBnM,OAAOoM,KAAOC,0CAEZtO,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAemO,SAAUD,2CACvBtO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAUP,MAAOG,GACfpO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,KAAK,KAEV1O,EAAAC,EAAAC,cAACuO,EAAA,EAAD,KAEEzO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,OAAQ,kBAAO5O,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAUpO,GAAI,iBAC1DL,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,KAAK,YAAYC,OAAO,EAAME,UAAWrG,IAChDxI,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOC,KAAK,YAAYC,OAAO,EAAME,UAAWvE,IAEhDtK,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOI,UAAWnO,SCbVoO,QACW,cAA7B7M,OAAO8M,SAASC,UAEe,UAA7B/M,OAAO8M,SAASC,UAEhB/M,OAAO8M,SAASC,SAASC,MACvB,2DCZNC,IAASN,OAAO5O,EAAAC,EAAAC,cAACiP,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.9bda43eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <div className=\"bg-header\">\n                <header className=\"header-main container\">\n\n                    <Link to=\"/\" className=\"logo\" title=\"Evolucional\"><img alt=\"Evolucional\" src=\"http://www.evolucional.com.br/Public/images/logo-evolucional.png\" /></Link>\n\n                    <span className=\"btn-menu\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </span>\n\n                    <nav className=\"menu\">\n                        <ul>\n                            <li><Link to=\"/\" title=\"Home\">HOME</Link></li>\n                            \n                            <li><Link to=\"/students\" title=\"\">Estudantes</Link></li>\n                            <li><Link to=\"/teachers\" title=\"\">Professores</Link></li>\n                            \n                            {/* <li><Link href=\"/experimente\" className=\"hide\" title=\"Promoçãp\">EXPERIMENTE </Link></li> */}\n                        </ul>\n                    </nav>\n                </header>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Header from './Header';\nexport default class NotFound extends Component {\n\n    render() {\n        return (\n            <div className=\"\">\n                <Header/>\n                <div className=\"body\">\n                    <h1>Página não encontrada</h1>\n                </div>\n            </div>\n        );\n    }\n}   ","export function getClassById(classes, class_id){\n    return classes.find(_class => _class.id === class_id);\n}\n\nexport function getDegreeById(degrees, degree_id){\n    return degrees.find(degree => degree.id === degree_id);\n}\n\nexport function getMatterById(matters, matter_id){\n    return matters.find(matter => matter.id === matter_id);\n}\n\nexport function  getClassesOfADegree(classes, relations, degreeId) {\n\n    const allClasses = classes;\n    const allRelations = relations;\n\n    let allRelationsDegrees = allRelations.map(allRelations => allRelations.degrees); // get only degrees relationship\n    allRelationsDegrees = [].concat.apply([], allRelationsDegrees); // merge in a single list\n\n    const allDegreesWithId = allRelationsDegrees.filter(el => el.degreeId === degreeId);\n\n    let classesForThisDegree = allDegreesWithId.map(el => el.classes);\n    classesForThisDegree = [].concat.apply([], classesForThisDegree);\n\n    const listOfClasses = allClasses.filter(a_class => {\n        return (classesForThisDegree.find(b_class => {\n            // the data are inconsistent: some relatioships have key \"classPosition\" others \"classId\" \n            if (b_class.hasOwnProperty(\"classPosition\")) {\n                b_class.id = b_class.classPosition\n            } else {\n                b_class.id = b_class.classId;\n            }\n\n            return b_class.id === a_class.id\n        }))\n    });\n\n\n\n    return listOfClasses;\n}\n\n/**\n * Filter also by teacher_id\n * @param {*} classes \n * @param {*} relations \n * @param {*} degreeId \n * @param {*} teacher_id \n */\nexport function  getClassesOfADegree2(classes, relations, degreeId, teacher_id) {\n\n   let listOfClasses = []\n   let degrees_relation = [];\n\n   for (const relation of relations) {\n        if (relation.teacherId === teacher_id){\n\n            degrees_relation = degrees_relation.concat(relation.degrees);\n            \n            for (const degree_relation of relation.degrees) {\n                if (degree_relation.degreeId === degreeId){\n                   for (const class_ of degree_relation.classes) {\n                        \n                        // the data are inconsistent: some relatioships have key \"classPosition\" others \"classId\" \n                        if (class_.hasOwnProperty(\"classPosition\")) {\n                            class_.id = class_.classPosition\n                        } else {\n                            class_.id = class_.classId;\n                        }\n                        \n                        listOfClasses.push(getClassById(classes, class_.id));\n                   }\n                }\n            }\n        }\n    }\n\n    return listOfClasses;\n}\n\nexport function getDegreesOfATeacher(relations, degrees, teacher_id){\n    \n    // let degrees_relation = [];\n    const degrees_found = [];\n\n    for (const relation of relations) {\n        if (relation.teacherId === teacher_id){\n\n            // degrees_relation = degrees_relation.concat(relation.degrees);\n            \n            for (const degree_relation of relation.degrees) {\n                const getDegreeResult = getDegreeById(degrees, degree_relation.degreeId);\n                if(getDegreeResult){\n                    degrees_found.push(getDegreeResult);\n                }\n            }\n        }\n    }\n\n    return degrees_found;\n}\n\nexport function getStudantsOfAClass(relations, class_id, teacher_id, degree_id) {\n    return [];\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport { Select, Button } from \"react-materialize\";\nimport * as studentActions from \"../actions/studentActions\";\nimport * as common from \"../utils/common\";\n\n\nclass EditStudentPopUp extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            studentToEdit: this.props.studentToEdit\n        }\n\n        window.editStudentPopUp = this;\n    }\n\n    closePopUp() {\n        $(\"#editStudent\").hide(500);\n    }\n\n    getClassesOfADegree(degreeId) {\n\n        const allClasses = this.props.classes;\n        const allRelations = this.props.relations;\n\n        return common.getClassesOfADegree(allClasses, allRelations, degreeId);\n    }\n\n    updateForm(evt, what) {\n\n        if (what === \"name\") {\n            this.setState({\n                ...this.state,\n                studentToEdit: { ...this.state.studentToEdit, name: evt.target.value }\n            });\n        }\n\n        else if (what === \"degree\") {\n            this.setState({\n                ...this.state,\n                studentToEdit: { ...this.state.studentToEdit, degreeId: parseInt(evt.target.value, 0) }\n            });\n        }\n\n        else if (what === \"class\") {\n            this.setState({\n                ...this.state,\n                studentToEdit: { ...this.state.studentToEdit, classId: parseInt(evt.target.value, 0) }\n            });\n\n        }\n\n    }\n\n    updateStateFromProps() {\n        // We are reusing this popup, so we might want to change the state in two cases:\n        // - initial state: state is null\n        // - using for multiples users\n        if (!this.state.studentToEdit ||\n            (this.state.studentToEdit && this.state.studentToEdit.id !== this.props.studentToEdit.id)) {\n                // eslint-disable-next-line\n                this.state = ({\n                    ...this.state,\n                    studentToEdit: this.props.studentToEdit\n                })\n            }\n    }\n\n    applyChange(evt) {\n        evt.preventDefault();\n\n        this.props.dispatch(studentActions.editOneStudent(\n            this.state.studentToEdit.id,\n            this.state.studentToEdit.name,\n            this.state.studentToEdit.classId,\n            this.state.studentToEdit.degreeId\n        ));\n\n        this.closePopUp();\n    }\n\n\n\n    render() {\n        if (this.props.studentToEdit) {\n            this.updateStateFromProps();\n            return (\n                <div className=\"\">\n                    <div className=\"hover_bkgr_fricc\" id=\"editStudent\" >\n                        <span className=\"helper\"></span>\n                        <div>\n                            <div onClick={() => this.closePopUp()} className=\"popupCloseButton\">X</div>\n                            <form>\n                                <input type=\"text\" value={this.state.studentToEdit.name} onChange={(evt) => this.updateForm(evt, \"name\")} />\n\n                                <Select value={this.state.studentToEdit.degreeId.toString()} onChange={(evt) => this.updateForm(evt, \"degree\")}>\n                                    <option value=\"\" disabled> Escolha um Grau </option>\n                                    {this.props.degrees.map(degree => {\n                                        return (\n                                            <option value={degree.id} key={degree.id} > {degree.name} </option>\n                                        )\n\n                                    })}\n                                </Select>\n\n                                <Select value={this.state.studentToEdit.classId.toString()} onChange={(evt) => this.updateForm(evt, \"class\")}>\n                                    <option value=\"\" disabled> Escolha uma classe </option>\n                                    {this.getClassesOfADegree(this.state.studentToEdit.degreeId).map(class_ => {\n                                        return (\n                                            <option value={class_.id} key={class_.id} > {class_.name} </option>\n                                        )\n                                    })}\n                                </Select>\n\n                                <Button onClick={(evt) => this.applyChange(evt)}>Aplicar</Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return <div></div>\n        }\n    }\n}\n\n\n\nfunction mapStateToProps(state) {\n    return {\n        classes: state.classesReducer.classes.classes,\n        degrees: state.degreesReducer.degrees,\n        relations: state.relationsReducer.relationships,\n    }\n}\n\nexport default connect(mapStateToProps)(EditStudentPopUp);","export function createMoreStudents(allDegrees, allRelations, allClasses) {\n\n    return {\n        type: \"CREATE_MORE_STUDENTS\",\n        allDegrees,\n        allRelations,\n        allClasses\n    }\n}\n\n\nexport function editOneStudent(studentId, name, classId,  degreeId) {\n\n    return {\n        type: \"EDIT_ONE_STUDENT\",\n        studentId, \n        name, \n        classId, \n        degreeId\n    }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nclass StudentChart extends Component {\n\n    constructor(props){\n        super(props);\n\n        window.studentChart = this;\n    }\n\n    closePopUp() {\n        $(\"#studentChart\").hide(500);\n    }\n\n    countStudentsInDegree(students) {\n\n \n        // compressed is a object key:value, where key is degreeId and value is the count_of_student\n        var compressed = {};\n\n        for (const student of students) {\n            if (compressed.hasOwnProperty(student.degreeId )){\n                compressed[student.degreeId] = compressed[student.degreeId]+1;\n            }\n            else{\n                compressed[student.degreeId] = 1;\n            }\n        }\n        \n\n        var ret = [];\n        // get cont in exact order of degree store\n        for (const degreeId of this.props.degrees.map(el => el.id)) {\n            ret.push(isNaN(compressed[degreeId]) ? 0 : compressed[degreeId]);\n        }\n\n        return ret;\n    };\n\n    \n    //Function to generate new colors\n    getRandomColors(numberOfColors) {\n        const colors = [];\n        for (let index = 0; index < numberOfColors; index++) {\n            // range between 0 e 255\n            var r = Math.floor(Math.random() * 255).toString();\n            var g = Math.floor(Math.random() * 255).toString();\n            var b = Math.floor(Math.random() * 255).toString();\n            \n            // push in colors array\n            colors.push({\"background\" : 'rgba('+r+', '+g+', '+b+', 0.5)', \"border\": 'rgba('+r+', '+g+', '+b+', 1)'});\n        }\n\n        return colors;\n      \n    }\n    \n\n    buildDataInFormatOfChartJS() {\n        const colors = this.getRandomColors(this.props.degrees.length);\n        return {\n            labels: this.props.degrees.map(el => el.name),\n            datasets: [{\n                label: 'Estudantes por Classe',\n                // data: [12, 19, 3, 5, 2, 3],\n                data: this.countStudentsInDegree(this.props.students),\n                backgroundColor: colors.map(el=>el.background),\n                borderColor: colors.map(el=>el.border),\n                borderWidth: 1\n            }]\n        };\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"\">\n                <div className=\"hover_bkgr_fricc\" id=\"studentChart\" /* style={{ display: this.props.visible ? 'block' : 'none' }} */ >\n                    <span className=\"helper\"></span>\n                    <div>\n                        <div onClick={() => this.closePopUp()} className=\"popupCloseButton\">X</div>\n\n                        {/* <img src={in_development_image} alt=\"in development\" style={{ width: \"186px\" }} /> */}\n                        <Bar\n                            data={this.buildDataInFormatOfChartJS()}\n                            // width={100}\n                            // height={50}\n                            options={{ maintainAspectRatio: true }}\n                        />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        students: state.studentReducer.students,\n        degrees: state.degreesReducer.degrees,\n    }\n}\n\nexport default connect(mapStateToProps)(StudentChart);","import React, { Component } from 'react';\nimport Header from './Header';\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport * as studentActions from \"../actions/studentActions\";\nimport EditStudentPopup from './EditStudentPopup';\nimport { Button } from 'react-materialize';\nimport StudentChart from \"./StudentChart\";\nimport * as common from \"../utils/common\"\n\nwindow.$ = $; // to use in terminal while developing\n\n\nclass Students extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            studentToEdit : this.props.students[0]\n        }\n\n        window.students = this;\n    }\n\n    getClassById(class_id) {\n        return common.getClassById(this.props.classes, class_id);\n    }\n\n    getDegreeById(degreeId) {\n        return common.getDegreeById(this.props.degrees, degreeId);\n    }\n\n    applyFilter(evt) {\n        evt.preventDefault();\n\n        const userName = $(\"form.filters-wrapper\").find(\"input#studentNameFilter\").val().toLowerCase();\n        const userDegree = $(\"form.filters-wrapper\").find(\"input#studentDegreeFilter\").val().toLowerCase();\n        const userClass = $(\"form.filters-wrapper\").find(\"input#studentClassFilter\").val().toLowerCase();\n\n        const table_tbody = $(\"table#studentTable\").find(\"tbody\");\n\n        table_tbody.find(\"tr\").show();\n\n        // filter by user name\n        if(userName){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.studentName\").text().toLowerCase().includes(userName)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by degree\n        if(userDegree){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.studentDegree\").text().toLowerCase().includes(userDegree)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by class\n        if(userClass){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.studentClass\").text().toLowerCase().includes(userClass)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n    }\n\n    createMoreStudents(){\n        this.props.dispatch((studentActions.createMoreStudents(this.props.degrees, this.props.relations, this.props.classes)));\n    }\n\n    editOneStudent(studentToEdit){\n        \n        $(\"#editStudent\").show(500);\n\n        this.setState({\n            studentToEdit\n        });\n\n        \n    }\n\n    showChart(){\n        $(\"#studentChart\").show(500);\n    }\n\n    render() {\n        const students = this.props.students;\n        return (\n            <div className=\"\">\n                <Header />\n                <div className=\"body\">\n                    <h1>Estudantes</h1>\n\n                    <form className=\"filters-wrapper\" onSubmit={(evt) => { this.applyFilter(evt) }}>\n                        <input type=\"text\" placeholder=\"Nome do Aluno\" id=\"studentNameFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Graduação do Aluno\" id=\"studentDegreeFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Classe do Aluno\" id=\"studentClassFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                    </form>\n\n                    <div style={{margin: \"19px 0\"}} className=\"spaceElements\">\n                        \n                        <Button onClick={() => this.createMoreStudents()}> Gerar mais estudantes </Button>\n                        <Button onClick={() => this.showChart()}> Mostrar Gráfico </Button>\n                    </div>\n\n                    <table className=\"highlight\" id=\"studentTable\">\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Grau</th>\n                                <th>Classe</th>\n                                <th>Editar</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {students.map(student => (\n                                <tr key={student.id}>\n                                    <td className=\"studentName\">{student.name}</td>\n                                    <td className=\"studentDegree\">{this.getDegreeById(student.degreeId).name}</td>\n                                    <td className=\"studentClass\">{this.getClassById(student.classId).name}</td>\n                                    <td className=\"StudentEdit\" onClick={() => this.editOneStudent(student)}>\n                                        <i style={{fontSize:\"23px\"}} className=\"fa\">&#xf044;</i>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                 \n\n                </div>\n            \n                <EditStudentPopup studentToEdit={this.state.studentToEdit}  />\n                \n                <StudentChart />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        students: state.studentReducer.students,\n        classes: state.classesReducer.classes.classes,\n        degrees: state.degreesReducer.degrees,\n        relations: state.relationsReducer.relationships,\n        matters: state.matterReducer.matters,\n\n    }\n}\n\nexport default connect(mapStateToProps)(Students);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport inDevelopmentImage from \"../images/in_development.png\";\nimport $ from \"jquery\";\n\n\nclass StudentsOfClassPopUp extends Component {\n\n    closePopUp(){\n        $(\"#showStudentsPopup\").hide(500);\n    }\n\n    render() {\n\n        return (\n            <div className=\"\">\n               <div className=\"hover_bkgr_fricc\" id=\"showStudentsPopup\" >\n                    <span className=\"helper\"></span>\n                    <div>\n                        <div onClick={() => this.closePopUp()} className=\"popupCloseButton\">X</div>\n                        \n                        <h2>In development</h2>\n\n                        <img style={{width:\"30%\"}} src={inDevelopmentImage} alt=\"\"/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n\n    }\n}\n\nexport default connect(mapStateToProps)(StudentsOfClassPopUp);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Header from './Header';\nimport * as common from \"../utils/common\";\nimport $ from \"jquery\";\nimport StudentsOfClassPopUp from './StudentsOfClassPopUp';\n\nclass Teachers extends Component {\n\n    applyFilter(evt) {\n        evt.preventDefault();\n\n        const userName = $(\"form.filters-wrapper\").find(\"input#teacherNameFilter\").val().toLowerCase();\n        const userDegree = $(\"form.filters-wrapper\").find(\"input#teacherDegreeFilter\").val().toLowerCase();\n        const userClass = $(\"form.filters-wrapper\").find(\"input#teacherClassFilter\").val().toLowerCase();\n        const userMatter = $(\"form.filters-wrapper\").find(\"input#teacherMatterFilter\").val().toLowerCase();\n\n        const table_tbody = $(\"table#teacherTable\").find(\"tbody\");\n\n        table_tbody.find(\"tr\").show();\n\n        // filter by user name\n        if(userName){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.teacherName\").text().toLowerCase().includes(userName)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by degree\n        if(userDegree){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.teacherDegree\").text().toLowerCase().includes(userDegree)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by class\n        if(userClass){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.teacherClass\").text().toLowerCase().includes(userClass)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by matter\n        if(userMatter){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.teacherMatter\").text().toLowerCase().includes(userMatter)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n    }\n\n    showStudents(){\n        $(\"#showStudentsPopup\").show(500);\n    }\n\n    render() {\n        const teachers = this.props.teachers;\n        const relations = this.props.relations;\n        const degrees = this.props.degrees;\n        const classes = this.props.classes;\n\n        return (\n            <div className=\"\">\n                <Header />\n                <div className=\"body\">\n                    <h1>Professores</h1>\n\n                    <form className=\"filters-wrapper\" onSubmit={(evt) => { this.applyFilter(evt) }}>\n                        <input type=\"text\" placeholder=\"Nome do Professor\" id=\"teacherNameFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Nome da Matéria\" id=\"teacherMatterFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Graduação do Professor\" id=\"teacherDegreeFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Classe do Professor\" id=\"teacherClassFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                    </form>\n\n                    <table className=\"highlight\" id=\"teacherTable\">\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Matéria</th>\n                                <th>Grau</th>\n                                <th>Classe</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {teachers.map(teacher => (\n                                common.getDegreesOfATeacher(relations, degrees, teacher.id).map(degree => {\n                                    return common.getClassesOfADegree2(classes, relations, degree.id, teacher.id).map(class_ => (\n                                        <tr key={teacher.id + \"-\" + degree.id+\"-\"+class_.id}>\n                                            <td className=\"teacherName\">{teacher.name}</td>\n                                            <td className=\"teacherMatter\">{\"TODO: get matter of teacher.id \"+ teacher.id}</td>\n                                            <td className=\"teacherDegree\">{degree.name}</td>\n                                            <td className=\"teacherClass myLink\" onClick={() => this.showStudents()}>{class_.name}</td>\n                                        </tr>\n                                    ))\n                                }))\n                            )}\n                        </tbody>\n                    </table>\n\n\n                </div>\n                \n                <StudentsOfClassPopUp />\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        students: state.studentReducer.students,\n        classes: state.classesReducer.classes.classes,\n        degrees: state.degreesReducer.degrees,\n        relations: state.relationsReducer.relationships,\n        teachers: state.teacherReducer.teachers\n    }\n}\n\nexport default connect(mapStateToProps)(Teachers);","import students from \"../jsons/students.json\";\n\nconst INITIAL_STATE = {\n    students: students\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction StudentReducer(state = INITIAL_STATE, action) {\n\n    if (!action) {\n        console.log(\"No action\");\n\n        return state;\n    }\n\n    if (action.type === \"CREATE_MORE_STUDENTS\") {\n        console.log(\"CREATE_MORE_STUDENTS\");\n\n        const allDegrees = action.allDegrees;\n        const allRelations = action.allRelations;\n        const allClasses = action.allClasses;\n\n        // colone original state\n        const newState = JSON.parse(JSON.stringify(state));\n\n        // get last id of a student\n        const last_id = Math.max.apply(Math, state.students.map(function(student) { return student.id; }));\n        for (let index = last_id + 1; index < last_id + 300; index++) {\n            try {\n\n                // get random degreeID\n                const randomDegree = allDegrees[Math.floor(Math.random() * allDegrees.length)];\n\n                // get random classID of this degree (like a join in sql)\n                let allRelationsDegrees = allRelations.map(allRelations => allRelations.degrees); // get only degrees relationship\n                allRelationsDegrees = [].concat.apply([], allRelationsDegrees); // merge in a single list\n\n                const allDegreesWithId = allRelationsDegrees.filter(el => el.degreeId === randomDegree.id);\n\n                const randomDegreeWithId = allDegreesWithId[Math.floor(Math.random() * allDegreesWithId.length)];\n\n                const randomClassPosition = randomDegreeWithId.classes[Math.floor(Math.random() * randomDegreeWithId.classes.length)];\n\n                const the_class = allClasses.find(a_class => {\n                    // the data are inconsistent: some relatioships have key \"classPosition\" others \"classId\" \n                    if (randomClassPosition.hasOwnProperty(\"classPosition\")) {\n                        return a_class.id === randomClassPosition.classPosition;\n                    } else {\n                        return a_class.id === randomClassPosition.classId;\n                    }\n                });\n\n                newState.students.push({\n                    \"id\": index,\n                    \"ra\": index,\n                    \"name\": \"Nome do aluno \" + index,\n                    \"degreeId\": randomDegree.id,\n                    \"classId\": the_class.id\n                });\n\n\n            } catch (error) {\n                console.warn(\"Some error with the data. Total of students until now: \" + newState.students.length);\n                index -= 1; // step back until the x students are make\n            }\n\n        }\n\n        return newState;\n    }\n\n    if (action.type === \"EDIT_ONE_STUDENT\") {\n        console.log(\"EDIT_ONE_STUDENT\");\n\n        // colone original state\n        const newState = JSON.parse(JSON.stringify(state));\n\n        const _student_id = action.studentId;\n        const new_name = action.name;\n        const new_classId = action.classId;\n        const new_degreeId = action.degreeId;\n\n        let student_index;\n        let studentToChange = newState.students.find((student, index) => {\n            if (student.id === _student_id){\n                student_index = index;\n                return true;\n            }\n            else{\n                return false;\n            }\n            \n        });\n\n        studentToChange = {\n            ...studentToChange,\n            name: new_name,\n            classId: new_classId,\n            degreeId: new_degreeId\n\n        }\n\n        newState.students[student_index] = studentToChange;\n\n        return newState;\n    }\n\n    return state;\n\n}\n\nexport default StudentReducer;","import relationships from \"../jsons/relationships.json\";\n\nconst INITIAL_STATE = {\n    relationships\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction relationsReducer(state = INITIAL_STATE, action) {\n\n    if (!action){\n        console.log(\"No action\");\n        \n        return state;\n    }\n\n    return state;\n}\n\nexport default relationsReducer;","import classes from \"../jsons/classes.json\";\n\nconst INITIAL_STATE = {\n    classes\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction classesReducer(state = INITIAL_STATE, action) {\n\n    if (!action){\n        console.log(\"No action\");\n        \n        return state;\n    }\n\n    if (action.type === \"\") {\n        \n    }\n\n    return state;\n\n}\n\nexport default classesReducer;","import degrees from \"../jsons/degrees.json\";\n\nconst INITIAL_STATE = {\n    degrees\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction degreesReducer(state = INITIAL_STATE, action) {\n\n    if (!action){\n        console.log(\"No action\");\n        \n        return state;\n    }\n\n    if (action.type === \"____\") {\n        return state;\n    }\n\n    return state;\n}\n\nexport default degreesReducer;","import teachers from \"../jsons/teachers.json\";\n\nconst INITIAL_STATE = {\n    teachers: teachers\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction StudentReducer(state = INITIAL_STATE, action) {\n\n    if (!action) {\n        console.log(\"No action\");\n\n        return state;\n    }\n\n\n\n    return state;\n\n}\n\nexport default StudentReducer;","import matters from \"../jsons/matters.json\";\n\nconst INITIAL_STATE = {\n    matters\n}\n\n/** \n* @param state\n* @param action\n* @returns state\n*/\nfunction MatterReducer(state = INITIAL_STATE, action) {\n    if (!action) {\n        console.log(\"No action\");\n\n        return state;\n    }\n\n    return state;\n\n}\nexport default MatterReducer;","import { combineReducers } from \"redux\";\nimport studentReducer from \"./StudentReducer\"\nimport relationsReducer from \"./RelationshipsReducer\"\nimport classesReducer from \"./ClassesReducer\"\nimport degreesReducer from \"./DegreesReducer\"\nimport teacherReducer from \"./TeacherReducer\"\nimport matterReducer from \"./MatterReducer\"\n\n\nconst rootReducer = combineReducers({\n    studentReducer,\n    relationsReducer,\n    classesReducer,\n    degreesReducer,\n    teacherReducer,\n    matterReducer\n\n    \n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport './css/App.css';\nimport './css/main.css';\nimport './css/materialize.css';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFound from './components/NotFound';\nimport Students from \"./components/Students\";\nimport Teachers from \"./components/Teachers\";\nimport rootStore from \"./store\"\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  window.rootStore = rootStore;\n  window.test = process.env.PUBLIC_URL;\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={rootStore}>\n        <Route path=\"/\">\n\n          <Switch>\n\n            <Route path=\"/\" exact={true} render={() => (<Redirect to={\"/students\"} />)} />\n            <Route path=\"/students\" exact={true} component={Students} />\n            <Route path=\"/teachers\" exact={true} component={Teachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n\n        </Route>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/in_development.37956f1e.png\";"],"sourceRoot":""}