{"version":3,"sources":["components/NotFound.jsx","components/Header.jsx","components/EditStudentPopup.jsx","actions/studentActions.js","components/StudentChart.jsx","components/Students.jsx","components/Teachers.jsx","store/reducers/StudentReducer.js","store/reducers/RelationshipsReducer.js","store/reducers/ClassesReducer.js","store/reducers/DegreesReducer.js","store/reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","react_default","a","createElement","className","Component","Header","react_router_dom","to","title","alt","src","EditStudentPopUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","studentToEdit","window","editStudentPopUp","assertThisInitialized","$","hide","degreeId","allClasses","classes","allRelationsDegrees","relations","map","allRelations","degrees","classesForThisDegree","concat","apply","filter","el","a_class","find","b_class","hasOwnProperty","id","classPosition","classId","evt","what","setState","objectSpread","name","target","value","parseInt","studentId","preventDefault","dispatch","type","closePopUp","_this2","updateStateFromProps","onClick","onChange","updateForm","lib","toString","disabled","degree","key","getClassesOfADegree","class_","applyChange","connect","classesReducer","degreesReducer","relationsReducer","relationships","StudentChart","studentChart","students","compressed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","student","err","return","ret","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","isNaN","numberOfColors","colors","index","r","Math","floor","random","g","b","background","border","getRandomColors","length","labels","datasets","label","data","countStudentsInClass","backgroundColor","borderColor","borderWidth","react_chartjs_2_es","buildDataInFormatOfChartJS","options","maintainAspectRatio","studentReducer","Students","class_id","_class","userName","val","toLowerCase","userDegree","userClass","table_tbody","each","_","tr","text","includes","show","allDegrees","Header_Header","onSubmit","applyFilter","placeholder","style","margin","createMoreStudents","showChart","getDegreeById","getClassById","editOneStudent","fontSize","EditStudentPopup","components_StudentChart","Teachers","INITIAL_STATE","StudentReducer","arguments","action","console","log","newState","JSON","parse","stringify","last_id","max","randomDegree","allDegreesWithId","randomDegreeWithId","randomClassPosition","the_class","ra","error","warn","student_index","_student_id","new_name","new_classId","new_degreeId","studentToChange","rootReducer","combineReducers","store","createStore","App","rootStore","basename","process","es","react_router","path","exact","render","component","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b66d058d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class NotFound extends Component {\n\n    render() {\n        return (\n            <div className=\"\">\n                <h1>Página não encontrada</h1>\n            </div>\n        );\n    }\n}   ","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nexport default class Header extends Component {\n\n    render() {\n        return (\n            <div className=\"bg-header\">\n                <header className=\"header-main container\">\n\n                    <Link to=\"/\" className=\"logo\" title=\"Evolucional\"><img alt=\"Evolucional\" src=\"http://www.evolucional.com.br/Public/images/logo-evolucional.png\" /></Link>\n\n                    <span className=\"btn-menu\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </span>\n\n                    <nav className=\"menu\">\n                        <ul>\n                            <li><Link to=\"/\" title=\"Home\">HOME</Link></li>\n                            \n                            <li><Link to=\"/students\" title=\"\">Estudantes</Link></li>\n                            <li><Link to=\"/teachers\" title=\"\">Professores</Link></li>\n                            \n                            {/* <li><Link href=\"/experimente\" className=\"hide\" title=\"Promoçãp\">EXPERIMENTE </Link></li> */}\n                        </ul>\n                    </nav>\n                </header>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport { Select, Button } from \"react-materialize\";\nimport * as studentActions from \"../actions/studentActions\";\n\n\nclass EditStudentPopUp extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            studentToEdit: this.props.studentToEdit\n        }\n\n        window.editStudentPopUp = this;\n    }\n\n    closePopUp() {\n        $(\"#editStudent\").hide(500);\n    }\n\n    getClassesOfADegree(degreeId) {\n\n        const allClasses = this.props.classes;\n        const allRelations = this.props.relations;\n\n        // get random classID of this degree (like a join in sql)\n        let allRelationsDegrees = allRelations.map(allRelations => allRelations.degrees); // get only degrees relationship\n        allRelationsDegrees = [].concat.apply([], allRelationsDegrees); // merge in a single list\n\n        const allDegreesWithId = allRelationsDegrees.filter(el => el.degreeId === degreeId);\n\n        let classesForThisDegree = allDegreesWithId.map(el => el.classes);\n        classesForThisDegree = [].concat.apply([], classesForThisDegree);\n\n        const listOfClasses = allClasses.filter(a_class => {\n            return (classesForThisDegree.find(b_class => {\n                // the data are inconsistent: some relatioships have key \"classPosition\" others \"classId\" \n                if (b_class.hasOwnProperty(\"classPosition\")) {\n                    b_class.id = b_class.classPosition\n                } else {\n                    b_class.id = b_class.classId;\n                }\n\n                return b_class.id === a_class.id\n            }))\n        });\n\n\n\n        return listOfClasses;\n    }\n\n    updateForm(evt, what) {\n\n        if (what === \"name\") {\n            this.setState({\n                ...this.state,\n                studentToEdit: { ...this.state.studentToEdit, name: evt.target.value }\n            });\n        }\n\n        else if (what === \"degree\") {\n            this.setState({\n                ...this.state,\n                studentToEdit: { ...this.state.studentToEdit, degreeId: parseInt(evt.target.value, 0) }\n            });\n        }\n\n        else if (what === \"class\") {\n            this.setState({\n                ...this.state,\n                studentToEdit: { ...this.state.studentToEdit, classId: parseInt(evt.target.value, 0) }\n            });\n\n        }\n\n    }\n\n    updateStateFromProps() {\n        // We are reusing this popup, so we might want to change the state in two cases:\n        // - initial state: state is null\n        // - using for multiples users\n        if (!this.state.studentToEdit ||\n            (this.state.studentToEdit && this.state.studentToEdit.id !== this.props.studentToEdit.id)) {\n                // eslint-disable-next-line\n                this.state = ({\n                    ...this.state,\n                    studentToEdit: this.props.studentToEdit\n                })\n            }\n    }\n\n    applyChange(evt) {\n        evt.preventDefault();\n\n        this.props.dispatch(studentActions.editOneStudent(\n            this.state.studentToEdit.id,\n            this.state.studentToEdit.name,\n            this.state.studentToEdit.classId,\n            this.state.studentToEdit.degreeId\n        ));\n\n        this.closePopUp();\n    }\n\n\n\n    render() {\n        if (this.props.studentToEdit) {\n            this.updateStateFromProps();\n            return (\n                <div className=\"\">\n                    <div className=\"hover_bkgr_fricc\" id=\"editStudent\" >\n                        <span className=\"helper\"></span>\n                        <div>\n                            <div onClick={() => this.closePopUp()} className=\"popupCloseButton\">X</div>\n                            <form>\n                                <input type=\"text\" value={this.state.studentToEdit.name} onChange={(evt) => this.updateForm(evt, \"name\")} />\n\n                                <Select value={this.state.studentToEdit.degreeId.toString()} onChange={(evt) => this.updateForm(evt, \"degree\")}>\n                                    <option value=\"\" disabled> Escolha um Grau </option>\n                                    {this.props.degrees.map(degree => {\n                                        return (\n                                            <option value={degree.id} key={degree.id} > {degree.name} </option>\n                                        )\n\n                                    })}\n                                </Select>\n\n                                <Select value={this.state.studentToEdit.classId.toString()} onChange={(evt) => this.updateForm(evt, \"class\")}>\n                                    <option value=\"\" disabled> Escolha uma classe </option>\n                                    {this.getClassesOfADegree(this.state.studentToEdit.degreeId).map(class_ => {\n                                        return (\n                                            <option value={class_.id} key={class_.id} > {class_.name} </option>\n                                        )\n                                    })}\n                                </Select>\n\n                                <Button onClick={(evt) => this.applyChange(evt)}>Aplicar</Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return <div></div>\n        }\n    }\n}\n\n\n\nfunction mapStateToProps(state) {\n    return {\n        classes: state.classesReducer.classes.classes,\n        degrees: state.degreesReducer.degrees,\n        relations: state.relationsReducer.relationships,\n    }\n}\n\nexport default connect(mapStateToProps)(EditStudentPopUp);","export function createMoreStudents(allDegrees, allRelations, allClasses) {\n\n    return {\n        type: \"CREATE_MORE_STUDENTS\",\n        allDegrees,\n        allRelations,\n        allClasses\n    }\n}\n\n\nexport function editOneStudent(studentId, name, classId,  degreeId) {\n\n    return {\n        type: \"EDIT_ONE_STUDENT\",\n        studentId, \n        name, \n        classId, \n        degreeId\n    }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport { Bar } from \"react-chartjs-2\";\n\n\nclass StudentChart extends Component {\n\n    constructor(props){\n        super(props);\n\n        window.studentChart = this;\n    }\n\n    closePopUp() {\n        $(\"#studentChart\").hide(500);\n    }\n\n    countStudentsInClass(students) {\n\n \n        // compressed is a object key:value, where key is degreeId and value is the count_of_student\n        var compressed = {};\n\n        for (const student of students) {\n            if (compressed.hasOwnProperty(student.degreeId )){\n                compressed[student.degreeId] = compressed[student.degreeId]+1;\n            }\n            else{\n                compressed[student.degreeId] = 1;\n            }\n        }\n        \n\n        var ret = [];\n        // get cont in exact order of degree store\n        for (const degreeId of this.props.degrees.map(el => el.id)) {\n            ret.push(isNaN(compressed[degreeId]) ? 0 : compressed[degreeId]);\n        }\n\n        return ret;\n    };\n\n    \n    //Function to generate new colors\n    getRandomColors(numberOfColors) {\n        const colors = [];\n        for (let index = 0; index < numberOfColors; index++) {\n            // range between 0 e 255\n            var r = Math.floor(Math.random() * 255).toString();\n            var g = Math.floor(Math.random() * 255).toString();\n            var b = Math.floor(Math.random() * 255).toString();\n            \n            // push in colors array\n            colors.push({\"background\" : 'rgba('+r+', '+g+', '+b+', 0.5)', \"border\": 'rgba('+r+', '+g+', '+b+', 1)'});\n        }\n\n        return colors;\n      \n    }\n    \n\n    buildDataInFormatOfChartJS() {\n        const colors = this.getRandomColors(this.props.degrees.length);\n        return {\n            labels: this.props.degrees.map(el => el.name),\n            datasets: [{\n                label: 'Estudantes por Classe',\n                // data: [12, 19, 3, 5, 2, 3],\n                data: this.countStudentsInClass(this.props.students),\n                backgroundColor: colors.map(el=>el.background),\n                borderColor: colors.map(el=>el.border),\n                borderWidth: 1\n            }]\n        };\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"\">\n                <div className=\"hover_bkgr_fricc\" id=\"studentChart\" /* style={{ display: this.props.visible ? 'block' : 'none' }} */ >\n                    <span className=\"helper\"></span>\n                    <div>\n                        <div onClick={() => this.closePopUp()} className=\"popupCloseButton\">X</div>\n\n                        {/* <img src={in_development_image} alt=\"in development\" style={{ width: \"186px\" }} /> */}\n                        <Bar\n                            data={this.buildDataInFormatOfChartJS()}\n                            // width={100}\n                            // height={50}\n                            options={{ maintainAspectRatio: true }}\n                        />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        students: state.studentReducer.students,\n        degrees: state.degreesReducer.degrees,\n    }\n}\n\nexport default connect(mapStateToProps)(StudentChart);","import React, { Component } from 'react';\nimport Header from './Header';\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport * as studentActions from \"../actions/studentActions\";\nimport EditStudentPopup from './EditStudentPopup';\nimport { Button } from 'react-materialize';\nimport StudentChart from \"./StudentChart\";\n\nwindow.$ = $; // to use in terminal while developing\n\n\nclass Students extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            studentToEdit : this.props.students[0]\n        }\n\n        window.students = this;\n    }\n\n    getClassById(class_id) {\n        return this.props.classes.find(_class => _class.id === class_id);\n    }\n\n    getDegreeById(degreeId) {\n        return this.props.degrees.find(degree => degree.id === degreeId);\n    }\n\n    applyFilter(evt) {\n        evt.preventDefault();\n\n        const userName = $(\"form.filters-wrapper\").find(\"input#studentNameFilter\").val().toLowerCase();\n        const userDegree = $(\"form.filters-wrapper\").find(\"input#studentDegreeFilter\").val().toLowerCase();\n        const userClass = $(\"form.filters-wrapper\").find(\"input#studentClassFilter\").val().toLowerCase();\n\n        const table_tbody = $(\"table#studentTable\").find(\"tbody\");\n\n        // filter by user name\n        if(userName){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.studentName\").text().toLowerCase().includes(userName)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by degree\n        if(userDegree){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.studentDegree\").text().toLowerCase().includes(userDegree)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        // filter by class\n        if(userClass){\n            table_tbody.find(\"tr:visible\").each((_, tr) => {\n                if ($(tr).find(\"td.studentClass\").text().toLowerCase().includes(userClass)){\n                    $(tr).show();\n                }\n                else{\n                    $(tr).hide();\n                }\n            });\n        }\n\n        if (!userName && !userDegree && !userClass){\n            table_tbody.find(\"tr\").show();\n        }\n\n    }\n\n    createMoreStudents(){\n        this.props.dispatch((studentActions.createMoreStudents(this.props.degrees, this.props.relations, this.props.classes)));\n    }\n\n    editOneStudent(studentToEdit){\n        \n        $(\"#editStudent\").show(500);\n\n        this.setState({\n            studentToEdit\n        });\n\n        \n    }\n\n    showChart(){\n        $(\"#studentChart\").show(500);\n    }\n\n    render() {\n        const students = this.props.students;\n        return (\n            <div className=\"\">\n                <Header />\n                <div className=\"body\">\n                    <h1>Estudantes</h1>\n\n                    <form className=\"filters-wrapper\" onSubmit={(evt) => { this.applyFilter(evt) }}>\n                        <input type=\"text\" placeholder=\"Nome do Aluno\" id=\"studentNameFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Graduação do Aluno\" id=\"studentDegreeFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                        <input type=\"text\" placeholder=\"Classe do Aluno\" id=\"studentClassFilter\" onChange={(evt) => this.applyFilter(evt)} />\n                    </form>\n\n                    <div style={{margin: \"19px 0\"}} className=\"spaceElements\">\n                        \n                        <Button onClick={() => this.createMoreStudents()}> Gerar mais estudantes </Button>\n                        <Button onClick={() => this.showChart()}> Mostrar Gráfico </Button>\n                    </div>\n\n                    <table className=\"highlight\" id=\"studentTable\">\n                        <thead>\n                            <tr>\n                                <th>Nome</th>\n                                <th>Grau</th>\n                                <th>Classe</th>\n                                <th>Editar</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {students.map(student => (\n                                <tr key={student.id}>\n                                    <td className=\"studentName\">{student.name}</td>\n                                    <td className=\"studentDegree\">{this.getDegreeById(student.degreeId).name}</td>\n                                    <td className=\"studentClass\">{this.getClassById(student.classId).name}</td>\n                                    <td className=\"StudentEdit\" onClick={() => this.editOneStudent(student)}>\n                                        <i style={{fontSize:\"23px\"}} className=\"fa\">&#xf044;</i>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                 \n\n                </div>\n            \n                <EditStudentPopup studentToEdit={this.state.studentToEdit} getClassById={this.getClassById} getDegreeById={this.getDegreeById} />\n                \n                <StudentChart />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        students: state.studentReducer.students,\n        classes: state.classesReducer.classes.classes,\n        degrees: state.degreesReducer.degrees,\n        relations: state.relationsReducer.relationships,\n\n    }\n}\n\nexport default connect(mapStateToProps)(Students);","import React, { Component } from 'react';\nimport Header from './Header';\nexport default class Teachers extends Component {\n\n\n    \n\n    render() {\n        return (\n            <div className=\"bg-header\">\n                <Header/>\n                <div className=\"body\">\n                    <h1>Teachers</h1>\n                </div>\n            </div>\n        );\n    }\n}","import students from \"../jsons/students.json\";\n\nconst INITIAL_STATE = {\n    students: students\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction StudentReducer(state = INITIAL_STATE, action) {\n\n    if (!action) {\n        console.log(\"No action\");\n\n        return state;\n    }\n\n    if (action.type === \"CREATE_MORE_STUDENTS\") {\n        console.log(\"CREATE_MORE_STUDENTS\");\n\n        const allDegrees = action.allDegrees;\n        const allRelations = action.allRelations;\n        const allClasses = action.allClasses;\n\n        // colone original state\n        const newState = JSON.parse(JSON.stringify(state));\n\n        // get last id of a student\n        const last_id = Math.max.apply(Math, state.students.map(function(student) { return student.id; }));\n        for (let index = last_id + 1; index < last_id + 300; index++) {\n            try {\n\n                // get random degreeID\n                const randomDegree = allDegrees[Math.floor(Math.random() * allDegrees.length)];\n\n                // get random classID of this degree (like a join in sql)\n                let allRelationsDegrees = allRelations.map(allRelations => allRelations.degrees); // get only degrees relationship\n                allRelationsDegrees = [].concat.apply([], allRelationsDegrees); // merge in a single list\n\n                const allDegreesWithId = allRelationsDegrees.filter(el => el.degreeId === randomDegree.id);\n\n                const randomDegreeWithId = allDegreesWithId[Math.floor(Math.random() * allDegreesWithId.length)];\n\n                const randomClassPosition = randomDegreeWithId.classes[Math.floor(Math.random() * randomDegreeWithId.classes.length)];\n\n                const the_class = allClasses.find(a_class => {\n                    // the data are inconsistent: some relatioships have key \"classPosition\" others \"classId\" \n                    if (randomClassPosition.hasOwnProperty(\"classPosition\")) {\n                        return a_class.id === randomClassPosition.classPosition;\n                    } else {\n                        return a_class.id === randomClassPosition.classId;\n                    }\n                });\n\n                newState.students.push({\n                    \"id\": index,\n                    \"ra\": index,\n                    \"name\": \"Nome do aluno \" + index,\n                    \"degreeId\": randomDegree.id,\n                    \"classId\": the_class.id\n                });\n\n\n            } catch (error) {\n                console.warn(\"Some error with the data. Total of students until now: \" + newState.students.length);\n                index -= 1; // step back until the x students are make\n            }\n\n        }\n\n        return newState;\n    }\n\n    if (action.type === \"EDIT_ONE_STUDENT\") {\n        console.log(\"EDIT_ONE_STUDENT\");\n\n        // colone original state\n        const newState = JSON.parse(JSON.stringify(state));\n\n        const _student_id = action.studentId;\n        const new_name = action.name;\n        const new_classId = action.classId;\n        const new_degreeId = action.degreeId;\n\n        let student_index;\n        let studentToChange = newState.students.find((student, index) => {\n            if (student.id === _student_id){\n                student_index = index;\n                return true;\n            }\n            else{\n                return false;\n            }\n            \n        });\n\n        studentToChange = {\n            ...studentToChange,\n            name: new_name,\n            classId: new_classId,\n            degreeId: new_degreeId\n\n        }\n\n        newState.students[student_index] = studentToChange;\n\n        return newState;\n    }\n\n    return state;\n\n}\n\nexport default StudentReducer;","import relationships from \"../jsons/relationships.json\";\n\nconst INITIAL_STATE = {\n    relationships\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction relationsReducer(state = INITIAL_STATE, action) {\n\n    if (!action){\n        console.log(\"No action\");\n        \n        return state;\n    }\n\n    return state;\n}\n\nexport default relationsReducer;","import classes from \"../jsons/classes.json\";\n\nconst INITIAL_STATE = {\n    classes\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction classesReducer(state = INITIAL_STATE, action) {\n\n    if (!action){\n        console.log(\"No action\");\n        \n        return state;\n    }\n\n    if (action.type === \"\") {\n        \n    }\n\n    return state;\n\n}\n\nexport default classesReducer;","import degrees from \"../jsons/degrees.json\";\n\nconst INITIAL_STATE = {\n    degrees\n}\n\n/** \n * @param state\n * @param action\n * @returns state\n */\nfunction degreesReducer(state = INITIAL_STATE, action) {\n\n    if (!action){\n        console.log(\"No action\");\n        \n        return state;\n    }\n\n    if (action.type === \"____\") {\n        return state;\n    }\n\n    return state;\n}\n\nexport default degreesReducer;","import { combineReducers } from \"redux\";\nimport studentReducer from \"./StudentReducer\"\nimport relationsReducer from \"./RelationshipsReducer\"\nimport classesReducer from \"./ClassesReducer\"\nimport degreesReducer from \"./DegreesReducer\"\n\n\nconst rootReducer = combineReducers({\n    studentReducer,\n    relationsReducer,\n    classesReducer,\n    degreesReducer\n\n    \n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport './css/App.css';\nimport './css/main.css';\nimport './css/materialize.css';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFound from './components/NotFound';\nimport Students from \"./components/Students\";\nimport Teachers from \"./components/Teachers\";\nimport rootStore from \"./store\"\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  window.rootStore = rootStore;\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={rootStore}>\n        <Route path=\"/\">\n\n          <Switch>\n\n            <Route path=\"/\" exact={true} render={() => (<Redirect to={\"/students\"} />)} />\n            <Route path=\"/students\" exact={true} component={Students} />\n            <Route path=\"/teachers\" exact={true} component={Teachers} />\n\n            <Route component={NotFound} />\n          </Switch>\n\n        </Route>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}